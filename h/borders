/*******************************************************************
 * File:     borders
 * Purpose:  Drawing borders
 * Author:   Justin Fletcher
 * Date:     08 Nov 2002
 ******************************************************************/

#ifndef BORDERS_H
#define BORDERS_H

typedef struct bbox_s {
  int x0,y0,x1,y1;
  int dx,dy;
  int dx_1,dy_1;
} bbox_t;

typedef unsigned long colours_t;

#define COLOUR_FG    (0)
#define COLOUR_BG    (1)
#define COLOUR_SELBG (2) /* Not used */
#define COLOUR_WELL  (3)
#define COLOUR_FACE  (4)
#define COLOUR_OPP   (5)

/* Dithering flags in _fill and _draw routines */
#define DITHER_BACKGROUND (1<<0)
#define DITHER_SPRITES    (1<<1)

/* State flags in _state routine */
#define STATE_CHANGESSHAPE  (1<<0)
#define STATE_HIGHLIGHTABLE (1<<1)


/*************************************************** Gerph *********
 Function:     border_draw
 Description:  Draw a border
 Parameters:   type = button type
               flags = button flags
               box-> the bounding box to use
               colours-> the colours we're using
               ditherflags = flags to use for dithering
 Returns:      1 if handled, 0 if not handled
 ******************************************************************/
int border_draw(int type, unsigned long flags,
                 bbox_t *box, colours_t *colours,
                 unsigned long ditherflags);

/*************************************************** Gerph *********
 Function:     border_fill
 Description:  Fill the inner section of a bordered region
 Parameters:   type = button type
               flags = button flags
               box-> the bounding box to use
               colours-> the colours in use
 Returns:      1 if handled, 0 if not handled
 ******************************************************************/
int border_fill(int type, unsigned long flags, bbox_t *box,
                colours_t *colours, unsigned long ditherflags);

/*************************************************** Gerph *********
 Function:     border_colour
 Description:  Set up the colour block with the correct colours
 Parameters:   type = button type
               flags = icon flags
               box-> bounding box
               cols-> the colour block to update
               background = window background colour
 Returns:      1 if handled, 0 if not handled
 ******************************************************************/
int border_colour(int type, unsigned long flags, bbox_t *box,
                  colours_t *cols, unsigned long background);

/*************************************************** Gerph *********
 Function:     border_size
 Description:  Return the size of a border
 Parameters:   type = button type
               flags = button flags
               box-> the bounding box to use
 Returns:      1 if handled, 0 if not handled
 ******************************************************************/
int border_size(int type, unsigned long flags, bbox_t *box);

/*************************************************** Gerph *********
 Function:     border_state
 Description:  Return the state of the border renderer
 Parameters:   type = button type
               flags = button flags
               box-> the bounding box to use
 Returns:      our state flags for rendering
 ******************************************************************/
unsigned long border_state(int type, unsigned long flags, bbox_t *box);

#endif
